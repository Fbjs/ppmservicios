---
import { Icon } from 'astro-icon/components';
import { twMerge } from 'tailwind-merge';
import type { CallToAction as Props } from '~/types';

const {
  variant = 'secondary',
  target,
  text = Astro.slots.render('default') || 'Click aquí',
  icon = '',
  class: className = '',
  type,
  phone = '',
  message = 'Hola, me gustaría obtener más información.',
  ...rest
} = Astro.props;

// Definimos las variantes de botones
const variants = {
  primary: 'btn-primary',
  secondary: 'btn-secondary',
  tertiary: 'btn btn-tertiary',
  link: 'cursor-pointer hover:text-primary',
  whatsapp: 'flex items-center justify-center bg-[#25D366] text-white px-4 py-3 hover:scale-105 rounded-lg transition duration-300 hover:bg-[#20B357] shadow-lg',
  formulario: 'open-modal-btn px-8 py-3 rounded-lg bg-[var(--aw-color-accent)] dark:bg-[var(--aw-color-accent)] text-[var(--aw-color-text-button)] dark:text-[var(--aw-color-text-button)] transition duration-300 shadow-lg hover:scale-105 cursor-pointer',
  formulario2: 'open-modal-btn btn-primary',
  fancy: 'px-8 py-3 rounded-lg bg-gradient-to-r from-pink-500 via-red-500 to-yellow-500 hover:from-pink-600 hover:via-red-600 hover:to-yellow-600 transition duration-300 text-white shadow-lg active:scale-95 hover:scale-105 cursor-pointer',
};

// Construimos el enlace de WhatsApp solo si el número está presente
const whatsappUrl = phone ? `https://wa.me/${phone}?text=${encodeURIComponent(message)}` : '';

---

{
  type === 'button' || type === 'submit' || type === 'reset' ? (
    // Botón normal
    <button type={type} class={twMerge(variants[variant] || '', className)} {...rest}>
      <Fragment set:html={text} />
      {icon && <Icon name={icon} class="w-5 h-5 ml-1 -mr-1.5 rtl:mr-1 rtl:-ml-1.5 inline-block" />}
    </button>
  ) : variant === 'whatsapp' && phone ? (
    // Botón de WhatsApp (solo si `phone` tiene un valor)
    <a
      href={whatsappUrl}
      target="_blank"
      rel="noopener noreferrer"
      class={twMerge(variants[variant] || '', className, 'flex items-center gap-2')}
      {...rest}
    >
     <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-brand-whatsapp"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M3 21l1.65 -3.8a9 9 0 1 1 3.4 2.9l-5.05 .9" /><path d="M9 10a.5 .5 0 0 0 1 0v-1a.5 .5 0 0 0 -1 0v1a5 5 0 0 0 5 5h1a.5 .5 0 0 0 0 -1h-1a.5 .5 0 0 0 0 1" /></svg> {text}
    </a>
  ) : (
    // Botón normal como enlace
    <a
      class={twMerge(variants[variant] || '', className)}
      {...(target ? { target: target, rel: 'noopener noreferrer' } : {})}
      {...rest}
    >
      <Fragment set:html={text} />
      {icon && <Icon name={icon} class="w-5 h-5 ml-1 -mr-1.5 rtl:mr-1 rtl:-ml-1.5 inline-block" />}
    </a>
  )
}
